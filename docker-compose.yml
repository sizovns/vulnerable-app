version: '3.8'
services:
  tomcat_app:
    build: .
    container_name: demo-tomcat-app
    ports:
      - "8080:8080"
    volumes:
      - ./tomcat/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml
      - ./tomcat/web.xml:/usr/local/tomcat/conf/web.xml
      - ./tomcat/server.xml:/usr/local/tomcat/conf/server.xml
    depends_on:
      users_db:
        condition: service_healthy

  spring_boot_app:
    build:
      dockerfile: Dockerfile_boot_app
      context: .
    container_name: bff-boot-app
    environment:
      - API=demo-tomcat-app
      - MONGO_HOST=mongo_db
      - MY_LOGGING=INFO
    ports:
      - "8085:8085"
    depends_on:
      users_db:
        condition: service_healthy
      mongo_db:
        condition: service_healthy

  httpd:
    image: httpd:2.4.49
    container_name: demo-httpd
    ports:
      - "80:80"
    volumes:
      - ./httpd/httpd.conf:/usr/local/apache2/conf/httpd.conf

  users_db:
    container_name: users_db
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: myBestSecuredPassword!
      POSTGRES_USER: admin
      POSTGRES_DB: users
      ACCEPT_EULA: "Y"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo_db:
    image: mongo:6-jammy
    container_name: mongo_db
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/shop --quiet
      interval: 10s
      timeout: 5s
      retries: 5

